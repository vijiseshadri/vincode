
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
        
        carry = 0
        sum = 0
        i=0
        j=0
        root = n = ListNode(0)
        
        while(l1 is not None and l2 is not None):
            sum = (int)(carry + l1.val + l2.val)     
            carry = (int)(sum/10)
            sum = (int)(sum % 10)
            n.next = ListNode()
            n.next.val=sum
            n.next.next = None
            n = n.next
            l1 = l1.next
            l2 = l2.next
          
        while (l1 is not None):
            sum = (int)(carry + l1.val)
            carry =(int)(sum/10)
            sum = (int)(sum%10)
            n.next = ListNode()
            n.next.val = sum
            n.next.next = None
            n = n.next
            l1 = l1.next
            
            
        while (l2 is not None):
            sum = (int)(carry + l2.val)
            carry = (int)(sum/10)
            sum = (int)(sum%10)
            n.next = ListNode()
            n.next.val = sum
            n.next.next = None
            n = n.next
            l2 = l2.next
            
        if (carry):
            n.next = ListNode()
            n.next.val = carry
            n.next.next = None
            n = n.next
            
            
        return root.next
