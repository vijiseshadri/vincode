class Solution:
    def minWindow(self, s: str, t: str) -> str:
        if t == "": return ""
        
        countT, window = {}, {}
        have, need = 0, 0
        l = 0
        r = 0
        res = [-1, -1]
        resLen = float("infinity")
        
        for c in t:
            countT[c] = 1 + countT.get(c, 0)
            
        need = len(countT)
        
        for r in range(len(s)):
            
            window[s[r]] = 1 + window.get(s[r], 0)
            
            if s[r] in countT and window[s[r]] == countT[s[r]]:
                have = have + 1
                
            while (have == need):
                
                if (r-l + 1 < resLen):
                    res = [l, r]
                    resLen = (r - l + 1)
                
                window[s[l]] -= 1
                
                if s[l] in countT and window[s[l]] < countT[s[l]]:
                    have = have - 1
                
                l = l + 1
        
        l, r = res
    
        return s[l:r + 1] if resLen != float("infinity") else "" 
