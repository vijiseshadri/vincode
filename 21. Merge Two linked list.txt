# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
        root = ListNode(0)
        root.next = None
        n = root
        while (l1 is not None or l2 is not None):
            if (l1 is not None and l2 is not None):
                if (l1.val<l2.val):
                    n.next = ListNode(l1.val)
                    n.next.next = None
                    n=n.next
                    l1 = l1.next
                else:
                    n.next = ListNode(l2.val)
                    n.next.next = None
                    n=n.next
                    l2 = l2.next
            elif (l1 is not None):
                n.next = ListNode(l1.val)
                n.next.next = None
                n=n.next
                l1 = l1.next
            elif (l2 is not None):
                n.next = ListNode(l2.val)
                n.next.next = None
                n=n.next
                l2 = l2.next
        return root.next
    
    